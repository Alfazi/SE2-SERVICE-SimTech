API Routes and Endpoints
----------------------
1. Gateway Service (Port 8443 HTTPS, 8080 HTTP)
   - Handles all incoming requests
   - Routes to appropriate services
   - Implements rate limiting and security

2. User Service (Port 3001)
   Authentication Routes:
   - POST /register
     * New user registration
     * Required: name, email, password
   
   - POST /login
     * User authentication
     * Required: email, password
   
   OAuth Routes:
   - GET /auth/google
   - GET /auth/github
     * OAuth authentication handlers
     * Redirects to OAuth providers
   
   User Management:
   - GET /auth/user
     * Get current user details
     * Requires authentication

3. Product Service (Port 3002)
   Product Routes:
   - GET /api/products
     * Retrieve all products
     * Public access
   
   - GET /api/products/:id
     * Get specific product details
     * Required: product ID
   
   Stock Management:
   - PUT /api/products/:id/stock
     * Update product stock
     * Required: product ID, quantity
     * Authentication required

   Admin Routes (Requires Admin Authentication):
   - POST /api/products
     * Add new product
     * Required: item details (name, type, brand, model, price, etc.)
     * Admin only
   
   - PATCH /api/products/stock
     * Add stock to existing product
     * Required: item_name, stock (fixed value: 2)
     * Admin only
   
   - PATCH /api/products/price
     * Update product price
     * Required: item_name, new price
     * Admin only

4. Order Service (Port 3003)
   Order Management:
   - POST /api/orders
     * Create new order
     * Required: user ID, product details
   
   - GET /api/orders/:orderId
     * Get order details
     * Required: order ID
     * Authentication required
   
   - DELETE /api/orders/:orderId
     * Cancel unpaid order
     * Required: order ID, user authentication
   
   Cart Operations:
   - POST /api/orders/cart
     * Add items to cart
     * Required: user ID, product details

   Admin Routes (Requires Admin Authentication):
   - PATCH /api/orders/:orderId/status
     * Update order shipping status
     * Required: orderId (params), status (body)
     * Admin only
     * Updates order status (e.g., "Sudah Dikirim")
   
   - DELETE /api/orders/:orderId
     * Delete unpaid orders
     * Required: orderId (params)
     * Admin only
     * Restores product stock quantities
     * Only works for orders with "unpaid" status
   
   - GET /api/admin/orders
     * Get all orders with optional payment filter
     * Query params: payment (optional, filter for "unpaid")
     * Admin only
     * Returns all orders sorted by date
     * Can filter unpaid orders using ?payment=unpaid

5. Payment Service (Port 3004)
   Payment Processing:
   - POST /api/payments
     * Process payment for order
     * Required: order ID, payment details
   
   - GET /api/payments/:orderId
     * Get payment status
     * Required: order ID
   
   - POST /api/payments/cancel/:orderId
     * Cancel payment
     * Required: order ID, user authentication

Service Communication Flow
------------------------
1. Authentication Flow:
   Client -> Gateway -> User Service
   - Rate limited: 2000 requests per 15 minutes
   - Requires: user credentials or OAuth tokens

2. Product Operations:
   Client -> Gateway -> Product Service
   - Rate limited: 10000 requests per 15 minutes
   - Public access for GET requests
   - Protected access for stock updates

3. Order Processing:
   Client -> Gateway -> Order Service -> Product Service
   - Requires authentication
   - Checks product availability
   - Updates stock quantities

4. Payment Processing:
   Client -> Gateway -> Payment Service -> Order Service
   - Requires authentication
   - Validates order status
   - Updates order status

Security Middleware
-----------------
1. Rate Limiting:
   Global: 1000 requests per 15 minutes
   Products: 10000 requests per 15 minutes
   Users: 2000 requests per 15 minutes

2. IP Throttling:
   Global: 600ms between requests
   Products: 50ms between requests
   Users: 100ms between requests

3. Authentication Required:
   - All order operations
   - Payment processing
   - User profile operations
   - Stock management

Error Responses
-------------
1. Authentication Errors:
   - 401: Unauthorized
   - 403: Forbidden

2. Rate Limiting:
   - 429: Too Many Requests

3. Resource Errors:
   - 404: Not Found
   - 400: Bad Request

4. Server Errors:
   - 500: Internal Server Error

Admin Authentication
------------------
1. Admin Middleware:
   - Verifies user-id in request headers
   - Checks user role in database
   - Only allows 'admin' role to access protected routes

2. Admin Privileges:
   - Product management (add/update)
   - Stock control
   - Price management
   - Access to admin-only endpoints

3. Admin Response Codes:
   - 401: Missing user ID
   - 403: Non-admin user
   - 500: Authentication error

Admin Order Management
--------------------
1. Order Status Control:
   - Admins can update shipping status
   - Verify order existence
   - Prevent duplicate status updates
   - Track shipping status changes

2. Order Deletion:
   - Remove unpaid orders
   - Automatic stock restoration
   - Verification of payment status
   - Cascading deletion of order items

3. Order Monitoring:
   - View all system orders
   - Filter by payment status
   - Sort by order date
   - Access detailed order information
